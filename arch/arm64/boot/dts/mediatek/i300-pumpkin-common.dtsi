// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright (c) 2019 BayLibre, SAS.
 * Author: Fabien Parent <fparent@baylibre.com>
 */

#include <dt-bindings/gpio/gpio.h>

#include "mt6392.dtsi"

/ {
	aliases {
		serial0 = &uart0;
		ethernet0 = &ethernet;
	};

	chosen {
		stdout-path = "serial0:921600n8";
	};

	firmware {
		optee {
			compatible = "linaro,optee-tz";
			method = "smc";
		};
	};

	gpio-keys {
		compatible = "gpio-keys";
		input-name = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&gpio_keys_default>;

		volume-up {
			gpios = <&pio 42 GPIO_ACTIVE_LOW>;
			label = "volume_up";
			linux,code = <115>;
			wakeup-source;
			debounce-interval = <15>;
		};

		volume-down {
			gpios = <&pio 43 GPIO_ACTIVE_LOW>;
			label = "volume_down";
			linux,code = <114>;
			wakeup-source;
			debounce-interval = <15>;
		};
	};


	mt8167_audio_codec: mt8167_audio_codec {
		compatible = "mediatek,mt8167-codec";
		clocks = <&topckgen CLK_TOP_AUDIO>;
		clock-names = "bus";
		mediatek,afe-regmap = <&afe>;
		mediatek,apmixedsys-regmap = <&apmixedsys>;
		mediatek,pwrap-regmap = <&pwrap>;
		mediatek,speaker-mode = <0>; /* 0(CLASSD) 1(CLASSAB) */
		mediatek,dmic-wire-mode = <1>; /* 0(ONE_WIRE) 1(TWO_WIRE) */
		#sound-dai-cells = <0>;
	};

	sound: sound {
		compatible = "mediatek,mt8516-soc-pumpkin";
		mediatek,platform = <&afe>;
		status = "okay";
		dai-link-0 {
			sound-dai = <&afe>;
			dai-link-name = "MTK Codec";

			codec-0 {
				sound-dai = <&mt8167_audio_codec>;
			};
		};

		dai-link-1 {
			sound-dai = <&afe>;
			dai-link-name = "DMIC BE";

			codec-0 {
				sound-dai = <&mt8167_audio_codec>;
			};
		};
	};
};

&cpu0 {
	proc-supply = <&mt6392_vproc_reg>;
};

&cpu1 {
	proc-supply = <&mt6392_vproc_reg>;
};

&cpu2 {
	proc-supply = <&mt6392_vproc_reg>;
};

&cpu3 {
	proc-supply = <&mt6392_vproc_reg>;
};

&i2c0 {
	clock-div = <2>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins_a>;
	status = "okay";

	tca6416: gpio@20 {
		compatible = "ti,tca6416";
		reg = <0x20>;
		reset-gpios = <&pio 65 GPIO_ACTIVE_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&tca6416_pins>;

		gpio-controller;
		#gpio-cells = <2>;

		eint20_mux_sel0 {
			gpio-hog;
			gpios = <0 0>;
			input;
			line-name = "eint20_mux_sel0";
		};

		expcon_mux_sel1 {
			gpio-hog;
			gpios = <1 0>;
			input;
			line-name = "expcon_mux_sel1";
		};

		mrg_di_mux_sel2 {
			gpio-hog;
			gpios = <2 0>;
			input;
			line-name = "mrg_di_mux_sel2";
		};

		sd_sdio_mux_sel3 {
			gpio-hog;
			gpios = <3 0>;
			input;
			line-name = "sd_sdio_mux_sel3";
		};

		sd_sdio_mux_ctrl7 {
			gpio-hog;
			gpios = <7 0>;
			output-low;
			line-name = "sd_sdio_mux_ctrl7";
		};

		hw_id0 {
			gpio-hog;
			gpios = <8 0>;
			input;
			line-name = "hw_id0";
		};

		hw_id1 {
			gpio-hog;
			gpios = <9 0>;
			input;
			line-name = "hw_id1";
		};

		hw_id2 {
			gpio-hog;
			gpios = <10 0>;
			input;
			line-name = "hw_id2";
		};

		fg_int_n {
			gpio-hog;
			gpios = <11 0>;
			input;
			line-name = "fg_int_n";
		};

		usba_pwr_en {
			gpio-hog;
			gpios = <12 0>;
			output-high;
			line-name = "usba_pwr_en";
		};

		wifi_3v3_pg {
			gpio-hog;
			gpios = <13 0>;
			input;
			line-name = "wifi_3v3_pg";
		};

		cam_rst {
			gpios = <14 0>;
			output-low;
			line-name = "cam_rst";
		};

		cam_pwdn {
			gpios = <15 0>;
			output-low;
			line-name = "cam_pwdn";
		};
	};
};

&i2c2 {
	clock-div = <2>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins_a>;
	status = "okay";
};

&mt6392_pmic {
	interrupt-parent = <&pio>;
	interrupts = <28 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-controller;
	#interrupt-cells = <2>;
};

&uart0 {
	status = "okay";
};

&pio {
	pinctrl-names = "default";
	pinctrl-0 = <&state_default>;

	state_default:pinconf_default {
	};

	gpio_keys_default: gpiodefault {
		pins_cmd_dat {
			pinmux = <MT8516_PIN_42_KPCOL0__FUNC_GPIO42>,
				 <MT8516_PIN_43_KPCOL1__FUNC_GPIO43>;
			bias-pull-up;
			input-enable;
		};
	};

	i2c0_pins_a: i2c0@0 {
		pins1 {
			pinmux = <MT8516_PIN_58_SDA0__FUNC_SDA0_0>,
				 <MT8516_PIN_59_SCL0__FUNC_SCL0_0>;
			bias-disable;
		};
	};


	tca6416_pins: pinmux_tca6416_pins {
		gpio_mux_rst_n_pin {
			pinmux = <MT8516_PIN_65_UTXD1__FUNC_GPIO65>;
			output-high;
		};

		gpio_mux_int_n_pin {
			pinmux = <MT8516_PIN_64_URXD1__FUNC_GPIO64>;
			input-enable;
			bias-pull-up;
		};
	};

	mmc0_pins_default: mmc0default {
		pins_cmd_dat {
			pinmux = <MT8516_PIN_120_MSDC0_DAT0__FUNC_MSDC0_DAT0>,
				<MT8516_PIN_119_MSDC0_DAT1__FUNC_MSDC0_DAT1>,
				<MT8516_PIN_118_MSDC0_DAT2__FUNC_MSDC0_DAT2>,
				<MT8516_PIN_117_MSDC0_DAT3__FUNC_MSDC0_DAT3>,
				<MT8516_PIN_113_MSDC0_DAT4__FUNC_MSDC0_DAT4>,
				<MT8516_PIN_112_MSDC0_DAT5__FUNC_MSDC0_DAT5>,
				<MT8516_PIN_111_MSDC0_DAT6__FUNC_MSDC0_DAT6>,
				<MT8516_PIN_110_MSDC0_DAT7__FUNC_MSDC0_DAT7>,
				<MT8516_PIN_115_MSDC0_CMD__FUNC_MSDC0_CMD>;
			input-enable;
			bias-pull-up;
		};

		pins_clk {
			pinmux = <MT8516_PIN_116_MSDC0_CLK__FUNC_MSDC0_CLK>;
			bias-pull-down;
		};

		pins_rst {
			pinmux = <MT8516_PIN_114_MSDC0_RSTB__FUNC_MSDC0_RSTB>;
			bias-pull-up;
		};
	};

	mmc0_pins_uhs: mmc0@0{
		pins_cmd_dat {
			pinmux = <MT8516_PIN_120_MSDC0_DAT0__FUNC_MSDC0_DAT0>,
				<MT8516_PIN_119_MSDC0_DAT1__FUNC_MSDC0_DAT1>,
				<MT8516_PIN_118_MSDC0_DAT2__FUNC_MSDC0_DAT2>,
				<MT8516_PIN_117_MSDC0_DAT3__FUNC_MSDC0_DAT3>,
				<MT8516_PIN_113_MSDC0_DAT4__FUNC_MSDC0_DAT4>,
				<MT8516_PIN_112_MSDC0_DAT5__FUNC_MSDC0_DAT5>,
				<MT8516_PIN_111_MSDC0_DAT6__FUNC_MSDC0_DAT6>,
				<MT8516_PIN_110_MSDC0_DAT7__FUNC_MSDC0_DAT7>,
				<MT8516_PIN_115_MSDC0_CMD__FUNC_MSDC0_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT8516_PIN_116_MSDC0_CLK__FUNC_MSDC0_CLK>;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_rst {
			pinmux = <MT8516_PIN_114_MSDC0_RSTB__FUNC_MSDC0_RSTB>;
			bias-pull-up;
		};
	};

	mmc1_pins_default: mmc1default {
		pins_cmd_dat {
			pinmux = <MT8516_PIN_106_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
				 <MT8516_PIN_107_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
				 <MT8516_PIN_108_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
				 <MT8516_PIN_109_MSDC1_DAT3__FUNC_MSDC1_DAT3>,
				 <MT8516_PIN_104_MSDC1_CMD__FUNC_MSDC1_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT8516_PIN_105_MSDC1_CLK__FUNC_MSDC1_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_wifi_pwr_en {
			pinmux = <MT8516_PIN_41_KPROW1__FUNC_GPIO41>;
			output-low;
		};

		pins_pmu_en {
			pinmux = <MT8516_PIN_40_KPROW0__FUNC_GPIO40>;
			output-low;
		};
	};

	mmc1_pins_uhs: mmc1@0 {
		pins_cmd_dat {
			pinmux = <MT8516_PIN_106_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
				 <MT8516_PIN_107_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
				 <MT8516_PIN_108_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
				 <MT8516_PIN_109_MSDC1_DAT3__FUNC_MSDC1_DAT3>,
				 <MT8516_PIN_104_MSDC1_CMD__FUNC_MSDC1_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT8516_PIN_105_MSDC1_CLK__FUNC_MSDC1_CLK>;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};


		pins_wifi_pwr_en {
			pinmux = <MT8516_PIN_41_KPROW1__FUNC_GPIO41>;
			output-high;
		};

		pins_pmu_en {
			pinmux = <MT8516_PIN_40_KPROW0__FUNC_GPIO40>;
			output-high;
		};
	};

	mmc2_pins_default: mmc2default {
		pins_cmd_dat {
			pinmux = <MT8516_PIN_70_MSDC2_DAT0__FUNC_MSDC2_DAT0>,
				 <MT8516_PIN_71_MSDC2_DAT1__FUNC_MSDC2_DAT1>,
				 <MT8516_PIN_72_MSDC2_DAT2__FUNC_MSDC2_DAT2>,
				 <MT8516_PIN_73_MSDC2_DAT3__FUNC_MSDC2_DAT3>,
				 <MT8516_PIN_68_MSDC2_CMD__FUNC_MSDC2_CMD>;
			input-enable;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT8516_PIN_69_MSDC2_CLK__FUNC_MSDC2_CLK>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pin_cd {
			pinmux = <MT8516_PIN_4_EINT4__FUNC_GPIO4>;
			bias-pull-up;
		};
	};

	mmc2_pins_uhs: mmc2@0 {
		pins_cmd_dat {
			pinmux = <MT8516_PIN_70_MSDC2_DAT0__FUNC_MSDC2_DAT0>,
				 <MT8516_PIN_71_MSDC2_DAT1__FUNC_MSDC2_DAT1>,
				 <MT8516_PIN_72_MSDC2_DAT2__FUNC_MSDC2_DAT2>,
				 <MT8516_PIN_73_MSDC2_DAT3__FUNC_MSDC2_DAT3>,
				 <MT8516_PIN_68_MSDC2_CMD__FUNC_MSDC2_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT8516_PIN_69_MSDC2_CLK__FUNC_MSDC2_CLK>;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};
	};

	usb1_default_pins: usb1_pins {
	};

	spi_pins_a: spi@0 {
		pins1 {
			pinmux = <MT8516_PIN_49_SPI_CK__FUNC_SPI_CLK>,
				 <MT8516_PIN_51_SPI_MO__FUNC_SPI_MO>;
			bias-disable;
		};
	};

	i2c2_pins_a: i2c2@0 {
		pins1 {
			pinmux = <MT8516_PIN_60_SDA2__FUNC_SDA2_0>,
				 <MT8516_PIN_61_SCL2__FUNC_SCL2_0>;
			bias-disable;
		};
	};
};

&mmc0 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc0_pins_default>;
	pinctrl-1 = <&mmc0_pins_uhs>;
	status = "okay";
	bus-width = <8>;
	max-frequency = <200000000>;
	cap-mmc-highspeed;
	mmc-hs200-1_8v;
	cap-mmc-hw-reset;
	vmmc-supply = <&mt6392_vemc3v3_reg>;
	vqmmc-supply = <&mt6392_vio18_reg>;
	non-removable;
};

&mmc1 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_uhs>;
	bus-width = <4>;
	max-frequency = <200000000>;
	cap-sd-highspeed;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	cap-sdio-irq;
	vmmc-supply = <&mt6392_vemc3v3_reg>;
	vqmmc-supply = <&mt6392_vio18_reg>;
	non-removable;
	status = "okay";
};

&mmc2 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc2_pins_default>;
	pinctrl-1 = <&mmc2_pins_uhs>;
	cd-gpios = <&pio 4 GPIO_ACTIVE_HIGH>;
	bus-width = <4>;
	max-frequency = <200000000>;
	cap-sd-highspeed;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	vmmc-supply = <&mt6392_vmch_reg>;
	vqmmc-supply = <&mt6392_vio18_reg>;
	status = "okay";
};

&mt6392_vmc_reg {
	/* to power on U9737 which is needed for SD card support */
	regulator-always-on;
};

&usb0 {
	status = "okay";
	dr_mode = "peripheral";

	usb_con: connector {
		compatible = "usb-c-connector";
		label = "USB-C";
	};
};

&usb0_phy {
	status = "okay";
};

&usb1 {
	pinctrl-names = "default";
	pinctrl-0 = <&usb1_default_pins>;
	status = "okay";
};

&afe {
	/* 0(HDMI) 1(I2S) 2(TDM) */
	mediatek,tdm-out-mode = <1>;
	/* 0(IR1) 1(IRQ2) 4(IRQ7)*/
	mediatek,awb-irq-mode = <4>;
	/*0(Spearated Mode) 1(Share Mode)*/
	mediatek,i2s-clock-modes = <1 1>;
};

&spi {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_a>;
};
